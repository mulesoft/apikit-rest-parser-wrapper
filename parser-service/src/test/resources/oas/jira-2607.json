{
  "swagger": "2.0",
  "info": {
    "title": "Example API for Automation",
    "version": "1.0.0"
  },
  "host": "localhost:8081",
  "basePath": "/gateway/proxy/v4/apikit",
  "schemes": [
    "http",
    "https"
  ],
  "externalDocs": {
    "url": "",
    "description": "This application was created with the purpose of automating calls to an API through a proxy.\n",
    "x-amf-title": "Example API"
  },
  "paths": {
    "/v4/items": {
      "x-amf-displayName": "Items",
      "x-amf-description": "The collection of items",
      "get": {
        "description": "Get a list of all the available items.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "size",
            "description": "Size of the item.\n",
            "required": false,
            "in": "query",
            "enum": [
              "small",
              "medium",
              "large"
            ],
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "All items retreived.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "items": [
                  {
                    "size": "medium",
                    "id": 123,
                    "code": "AD-12",
                    "description": "Borders in light blue",
                    "color": "blue"
                  },
                  {
                    "id": 321,
                    "description": "Borders in red",
                    "color": "pink",
                    "size": "small",
                    "code": "AD-13"
                  }
                ]
              }
            }
          },
          "415": {
            "description": "Unsupported media type"
          },
          "405": {
            "description": "Get not allowed"
          },
          "400": {
            "description": "Bad Request."
          },
          "409": {
            "description": "Conflict"
          },
          "406": {
            "description": "Not acceptable"
          },
          "404": {
            "description": "The item could not be found"
          }
        },
        "security": [
          {
            "oauth_2_0": []
          },
          {
            "basicAuth": []
          }
        ]
      },
      "post": {
        "description": "Create a new item.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "x-amf-mediaType": "application/json",
            "in": "body",
            "name": "generated",
            "schema": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true,
                    "properties": {
                      "code": {
                        "type": "string"
                      },
                      "color": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "id": {
                        "type": "number"
                      },
                      "size": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "x-amf-requestPayloads": [
          {
            "mediaType": "multipart/form-data",
            "schema": {
              "type": "object",
              "additionalProperties": true,
              "required": [
                "code"
              ],
              "properties": {
                "code": {
                  "title": "Code",
                  "description": "Code of the item to delete.",
                  "example": "ASX-140",
                  "type": "string",
                  "minLength": 3,
                  "maxLength": 12
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "schema": {}
          },
          "400": {
            "description": "Bad Request."
          },
          "404": {
            "description": "The item could not be found"
          },
          "405": {
            "description": "Post not allowed"
          },
          "406": {
            "description": "Not acceptable"
          },
          "409": {
            "description": "Conflict"
          },
          "415": {
            "description": "Unsupported media type"
          }
        }
      }
    },
    "/v4/items/{itemId}": {
      "x-amf-description": "A specific item.",
      "get": {
        "description": "Get one item by id.",
        "schemes": [
          "HTTP"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "itemId",
            "description": "Id that identifies the item.\n",
            "required": true,
            "in": "path",
            "example": 138,
            "type": "integer",
            "minimum": 0
          },
          {
            "name": "user",
            "required": false,
            "in": "header",
            "example": "test_user",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The <<resourcePathName | !singularize> was successfully retrieved.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "code": {
                  "type": "string"
                },
                "color": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                },
                "size": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request."
          },
          "415": {
            "description": "Unsupported media type"
          },
          "405": {
            "description": "Get not allowed"
          },
          "406": {
            "description": "Not acceptable"
          },
          "404": {
            "description": "The item could not be found"
          },
          "409": {
            "description": "Conflict"
          }
        }
      },
      "put": {
        "description": "Update an item by Code.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "itemId",
            "description": "Id that identifies the item.\n",
            "required": true,
            "in": "path",
            "example": 138,
            "type": "integer",
            "minimum": 0
          },
          {
            "x-amf-mediaType": "application/json",
            "in": "body",
            "name": "generated",
            "schema": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "code": {
                  "type": "string"
                },
                "color": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                },
                "size": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "x-amf-requestPayloads": [
          {
            "mediaType": "application/x-www-form-urlencoded",
            "schema": {
              "type": "object",
              "additionalProperties": true,
              "required": [
                "code"
              ],
              "properties": {
                "code": {
                  "type": "string"
                },
                "color": {
                  "type": "string"
                },
                "size": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "schema": {}
          },
          "400": {
            "description": "Bad Request."
          },
          "409": {
            "description": "Conflict"
          },
          "406": {
            "description": "Not acceptable"
          },
          "405": {
            "description": "Put not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "404": {
            "description": "The item could not be found"
          }
        }
      },
      "delete": {
        "description": "Delete an item by Code.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "itemId",
            "description": "Id that identifies the item.\n",
            "required": true,
            "in": "path",
            "example": 138,
            "type": "integer",
            "minimum": 0
          }
        ],
        "responses": {
          "404": {
            "description": "Resource not found",
            "headers": {
              "X-waiting-period": {
                "required": true,
                "description": "The number of seconds to wait before you can attempt to make a request again.\n",
                "example": 34,
                "type": "integer",
                "minimum": 1,
                "maximum": 3600
              }
            }
          },
          "204": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "schema": {}
          },
          "405": {
            "description": "Delete not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "409": {
            "description": "Conflict"
          },
          "400": {
            "description": "Bad Request."
          },
          "406": {
            "description": "Not acceptable"
          }
        }
      }
    },
    "/v4/filtered/resources": {
      "get": {
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "patch": {
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "options": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/v4/filtered/resources/level2.1": {
      "get": {
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "patch": {
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "options": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/v4/filtered/resources/level2": {
      "get": {
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "patch": {
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "options": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/v4/filtered/resources/level2/level3.1": {
      "get": {
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "patch": {
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "options": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/v4/filtered/resources/level2/level3": {
      "get": {
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "patch": {
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "options": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/v4/filtered/resources/level2/level3/{levelId}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "levelId",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "levelId",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "levelId",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "levelId",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "options": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "levelId",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "oauth_2_0": {
      "type": "oauth2",
      "description": "Mule OAUTH.\n",
      "x-amf-describedBy": {
        "headers": {
          "Authorization": {
            "description": "Used to send a valid OAuth 2 access token. Do not use\nwith the \"access_token\" query string parameter.\n",
            "type": "string"
          }
        },
        "queryParameters": {
          "access_token": {
            "description": "Used to send a valid OAuth 2 access token. Do not use together with\nthe \"Authorization\" header\n",
            "type": "string"
          }
        },
        "responses": {
          "401": {
            "description": "Bad or expired token. This can happen if the user or Dropbox\nrevoked or expired an access token. To fix, you should re-\nauthenticate the user.\n"
          },
          "403": {
            "description": "Bad OAuth request (wrong consumer key, bad nonce, expired\ntimestamp...). Unfortunately, re-authenticating the user won't help here.\n"
          }
        }
      },
      "authorizationUrl": "http://localhost:9999/authorize",
      "tokenUrl": "http://localhost:9999/access-token",
      "x-amf-settings": {
        "authorizationGrants": [
          "authorization_code",
          "implicit"
        ]
      }
    },
    "basicAuth": {
      "type": "basic",
      "description": "Basic Authentication",
      "x-amf-describedBy": {
        "queryParameters": {
          "Username": {
            "displayName": "User name",
            "example": "test_user",
            "type": "string"
          },
          "Password": {
            "displayName": "Password",
            "example": "passwd_1234",
            "type": "string"
          }
        }
      }
    }
  },
  "x-amf-securitySchemes": {
    "customSecurity": {
      "type": "x-{other}",
      "description": "Custom security",
      "x-amf-describedBy": {
        "queryParameters": {
          "authenticationCode": {
            "example": "JKS346KQHKWBERJHKLQW4H59F83N39G",
            "type": "string"
          }
        }
      }
    }
  }
}